<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:net="flash.net.*"
		 xmlns:utils="flash.utils.*">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import ns.flex.controls.ProgressBox;
			import ns.flex.util.IOUtil;
			import ns.flex.util.MessageUtil;

			private static var progressBox:ProgressBox=new ProgressBox;

			[Bindable]
			public var _file:FileReference;

			[Bindable]
			public var deletable:Boolean=true;
			[Bindable]
			public var fileId:String;
			[Bindable]
			public var fileName:String;
			[Bindable]
			public var fileSize:Number;
			public var status:String='init';

			/*
			 * must has these methods:
			 *     upload(String fileName,byte[] data,String uid)
			 *     download(String uid)
			 *     remove(String uid)
			 */
			private var _service:RemoteObject;

			public function set file(f:FileReference):void
			{
				_file=f;
				_file.addEventListener(Event.COMPLETE, function(e:Event):void
				{
					upload();
				});
			}

			public function remove():void
			{
				if (status == 'uploadStart')
					_service.getOperation('upload').cancel();
				status='deleted';
				_service.remove(fileId);
				parent.removeChild(this);
			}

			public function set service(s:RemoteObject):void
			{
				_service=s;
				_service.getOperation('upload').addEventListener(ResultEvent.RESULT,
					function(e:ResultEvent):void
					{
						if (e.result == fileId)
						{
							status='uploadComplete';
							labelBox.setStyle('backgroundColor', 0xB8F88D);
						}
					});
				_service.getOperation('download').addEventListener(ResultEvent.RESULT,
					function(e:ResultEvent):void
					{
						if (e.result.fileId == fileId)
						{
							progressBox.close();
							IOUtil.saveFileWithAlert(e.result.data, e.result.name,
								Sprite(parent));
						}
					});
				_service.addEventListener(FaultEvent.FAULT, function(e:FaultEvent):void
				{
					progressBox.close();
				})
			}

			private function download():void
			{
				progressBox.show(parent);
				_service.download(fileId);
			}

			private function upload():void
			{
				if (status == 'init')
				{
					status='uploadStart';
					_service.upload(fileName, _file.data, fileId);
				}
			}
		]]>
	</mx:Script>
	<mx:HBox id="labelBox">
		<mx:CheckBox id="checkBox" visible="{deletable}" selected="true"/>
		<mx:Label click="checkBox.selected=!checkBox.selected"
				  text="{fileName}[{IOUtil.getFileSize(fileSize)}]"/>
	</mx:HBox>
	<mx:LinkButton visible="{deletable}" label="删除" click="remove()"/>
	<mx:LinkButton label="下载" click="download()" visible="{!_file}"/>
</mx:HBox>
