<?xml version="1.0" encoding="utf-8"?>
<TitleWindowPlus xmlns="ns.flex.controls.*" xmlns:mx="http://www.adobe.com/2006/mxml"
				 showCloseButton="true" keyDown="onKeyDown(event)" creationComplete="cc()"
				 close="onClose()" added="setFocus()" horizontalAlign="center"
				 titleDoubleClick="switchSize()">
	<mx:Metadata>
		[Event(name="enterKeyDown")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import ns.flex.support.MenuSupport;
			import mx.core.UITextField;
			import mx.core.IFlexDisplayObject;
			import mx.managers.PopUpManager;
			import mx.events.CloseEvent;
			import mx.validators.Validator;
			private var validatorArr:Array=new Array();
			private var originWidth:int;
			private var originHeight:int;
			public var menuSupport:MenuSupport;
			
			protected function pushValidator(... args):void
			{
				for each (var arg:* in args)
					validatorArr.push(arg);
			}
			
			public function validate():Boolean
			{
				return Validator.validateAll(validatorArr).length == 0;
			}
			
			private function switchSize():void
			{
				if (originWidth == width && originHeight == height)
				{
					width=parent.width;
					height=parent.height;
					x=0;
					y=0;
				}
				else
				{
					width=originWidth;
					height=originHeight;
					PopUpManager.centerPopUp(this);
				}
			}
			
			private function cc():void
			{
				originWidth=width;
				originHeight=height;
				var moveToX:Number=mouseX > width / 2 ? mouseX - width / 2 : 0;
				var moveToY:Number=mouseY > height / 2 ? mouseY - height / 2 : 0;
				if(moveToX+width>stage.stageWidth)
				moveToX=stage.stageWidth-width;
				if(moveToY+height>stage.stageHeight)
				moveToY=stage.stageHeight-height;
				move(moveToX,moveToY);
				menuSupport=new MenuSupport();
				this.contextMenu=menuSupport.contextMenu;
				menuSupport.createMenuItem('关闭', onClose, false, true);
			}
			
			private function onKeyDown(evt:KeyboardEvent):void
			{
				if (evt.keyCode == Keyboard.ESCAPE)
					close();
				else if (evt.keyCode == Keyboard.ENTER)
					this.dispatchEvent(new Event('enterKeyDown'));
			}
			
			private function onClose(evt:Event=null):void
			{
				if (this.isPopUp)
					PopUpManager.removePopUp(this);
			}
			
			public function close():void
			{
				this.dispatchEvent(new CloseEvent(CloseEvent.CLOSE));
				trace('CloseEvent');
			}
			
			public function show(parent:DisplayObject, modal:Boolean=true):void
			{
				PopUpManager.addPopUp(this, parent, modal);
			}
		]]>
	</mx:Script>
	<!--失败SHAKE特效-->
	<mx:Sequence id="shake" target="{this}" duration="100" repeatCount="2">
		<mx:Move xBy="10"/>
		<mx:Move xBy="-10"/>
	</mx:Sequence>
</TitleWindowPlus>
